---
- hosts: "{{ passing_hosts }}"
  become: yes
  remote_user: ec2-user
  become_user: root
  vars:
    extra_path: /usr/local/bin
  tasks:
    # server update 
    - name: Updating OS
      yum:
        name: "*"
        state: latest

    # installing docker + additional require packages
    - name: required packages
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: installing iproute-tc
      yum:
        name: iproute-tc
        state: present    
  
    - name: install docker
      yum:
        name: docker
        state: present
    
    - name: enable docker
      systemd:
        name: docker
        state: stopped
        enabled: yes

    - name: setting docker cgdriver to systemd
      copy:
        src: "{{ playbook_dir }}/srv/docker-cgdriver"
        dest: /etc/docker/daemon.json

    - name: start docker
      systemd:
        name: docker
        state: started

    # Adding k8s to yum repo
    - name: add kubernetes repo
      yum_repository:
        name: kubernetes
        description: kubernetes repo
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled: 1
        gpgcheck: 1
        gpgkey: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: install kubernetes control plane
      yum:
        name:
          - kubelet-1.23.0
          - kubeadm-1.23.0
          - kubectl-1.23.0
        state: present
    
    - name: enable and start kubernetes
      systemd:
        name: kubelet
        enabled: yes
        state: stopped
    
    - name: bridge-nf-call-iptables
      shell: echo 'net.bridge.bridge-nf-call-iptables = 1' > /etc/sysctl.conf
    
    - name: systctl
      shell: sysctl -p

    - name: initialize the control-plane
      command: kubeadm init
    
    - name: generate join
      shell: kubeadm token create --print-join-command
      register: join_command
  
    - name: save output to file
      copy:
        content: "{{ join_command.stdout }}"
        dest: /tmp/join_command_variable

    - name: import the join command to a file on local server
      fetch:
        src: /tmp/join_command_variable
        dest: /tmp/
        flat: true

    - name: enabling user to use kubernetes
      command: "{{ item }}"
      with_items:
        - mkdir -p $HOME/.kube
        - sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

    - name: install k8s cni plugin
      command: kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml

    #installing helm
    - name: modying PATH environmnet variable 
      copy:
        dest: /etc/profile.d/custom-path
        content: 'PATH=$PATH:{{ extra_path }}'

    - name: install helm from script
      ignore_errors: true
      command: "{{ item }}"
      with_items:
        - curl -LO https://git.io/get_helm.sh
        - chmod 700 /home/ec2-user/get_helm.sh
        - /home/ec2-user/get_helm.sh
        - /usr/local/bin/helm init
